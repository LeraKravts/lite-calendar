package main

import (
	"fmt"

	"github.com/lerakravts/lite-calendar/internal/handler"
	"github.com/lerakravts/lite-calendar/internal/repo"
	"github.com/lerakravts/lite-calendar/internal/service"

	"log"
	"net/http"
)

func main() {

	//–ø–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–ª–æ–∏ –∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	repo := repo.NewRepository()
	service := service.NewService(repo)
	handler := handler.NewHandler(service)

	// Create route dispatcher
	mux := http.NewServeMux()

	//   –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–∞ –º–µ—Ç–æ–¥–∞ (GET –∏ POST) –ø–æ –ø—É—Ç–∏ /events:
	//–≤–∞–ª–∏–¥–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–æ –≤–Ω–µ—à–Ω–µ–º switch, –ø—Ä—è–º–æ –≤ main.go.
	//
	//–ê –∑–Ω–∞—á–∏—Ç, GetEvents –∏ CreateEvent –Ω–µ –æ–±—è–∑–∞–Ω—ã –ø—Ä–æ–≤–µ—Ä—è—Ç—å –º–µ—Ç–æ–¥ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è
	//‚Äî –æ–Ω–∏ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º–µ—Ç–æ–¥ —É–∂–µ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É.
	mux.HandleFunc("/events", func(w http.ResponseWriter, r *http.Request) {
		switch r.Method {
		case http.MethodGet:
			handler.GetEvents(w, r)
		case http.MethodPost:
			handler.CreateEvent(w, r)
		default:
			http.Error(w, "Method not allowed", http.StatusMethodNotAllowed)
		}
	})

	mux.HandleFunc("/events/", func(w http.ResponseWriter, r *http.Request) {
		if r.Method == http.MethodDelete {
			handler.DeleteEvent(w, r)
			return

		}
		http.Error(w, "method not allowed", http.StatusMethodNotAllowed)
	})

	// Start server (listens on port 8080 and routes to mux)
	fmt.Println("üöÄ Starting server at http://localhost:8080")
	err := http.ListenAndServe(":8080", mux)
	if err != nil {
		log.Fatal("‚ùå Server failed to start", err)
	}

}
